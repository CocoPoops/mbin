entry_comment_create:
  controller: App\Controller\EntryCommentController::create
  defaults: { parent_comment_id: null }
  path: /m/{magazine_name}/t/{entry_id}/komentarz/{parent_comment_id}
  methods: [ GET, POST ]

entry_comment_edit:
  controller: App\Controller\EntryCommentController::edit
  path: /m/{magazine_name}/t/{entry_id}/komentarz/{comment_id}/edytuj
  methods: [ GET, POST ]

entry_comment_delete:
  controller: App\Controller\EntryCommentController::delete
  path: /m/{magazine_name}/t/{entry_id}/komentarz/{comment_id}/delete
  methods: [ POST ]

entry_comment_purge:
  controller: App\Controller\EntryCommentController::purge
  path: /m/{magazine_name}/t/{entry_id}/komentarz/{comment_id}/purge
  methods: [ POST ]

entry_comment_vote:
  controller: App\Controller\VoteController
  defaults: { entityClass: App\Entity\EntryComment }
  path: /ecv/{id}/{choice}
  methods: [POST]

entry_comments:
  controller: App\Controller\EntryCommentController::front
  defaults: { sortBy: ~, time: ~ }
  path: /komentarze/{sortBy}/{time}
  methods: [GET]
  requirements: { sortBy: "%front_sort_options%" }

entry_comments_subscribed:
  controller: App\Controller\EntryCommentController::subscribed
  defaults: { sortBy: ~, time: ~ }
  path: /sub/komentarze/{sortBy}/{time}
  methods: [GET]
  requirements: { sortBy: "%front_sort_options%" }

magazine_comments:
  controller: App\Controller\EntryCommentController::front
  defaults: { sortBy: ~, time: ~ }
  path: /m/{name}/komentarze/{sortBy}/{time}
  methods: [GET]
  requirements: { sortBy: "%front_sort_options%" }
