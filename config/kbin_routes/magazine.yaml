magazine_front:
  controller: App\Controller\MagazineController::front
  defaults: { sortBy: ~ }
  path: /m/{name}/{sortBy}
  methods: [GET]
  requirements: { sortBy: "%front_sort_options%" }

magazine_create:
  controller: App\Controller\MagazineController::create
  path: /nowyMagazyn
  methods: [ GET, POST ]

magazine_purge:
  controller: App\Controller\MagazineController::purge
  path: /m/{name}/purge
  methods: [ POST ]

magazine_list_all:
  controller: App\Controller\MagazineController::listAll
  path: /magazyny
  methods: [ GET ]

magazine_moderators:
  controller: App\Controller\MagazineController::moderators
  path: /m/{name}/moderatorzy
  methods: [ GET ]

magazine_subscribe:
  controller: App\Controller\MagazineController::subscribe
  path: /m/{name}/subscribe
  methods: [ POST ]

magazine_unsubscribe:
  controller: App\Controller\MagazineController::unsubscribe
  path: /m/{name}/unsubscribe
  methods: [ POST ]

magazine_block:
  controller: App\Controller\MagazineController::block
  path: /m/{name}/block
  methods: [ POST ]

magazine_unblock:
  controller: App\Controller\MagazineController::unblock
  path: /m/{name}/unblock
  methods: [ POST ]

magazine_panel_ban:
  controller: App\Controller\MagazinePanelController::ban
  path: /m/{magazine_name}/ban/{user_username}
  methods: [ GET, POST ]

magazine_panel_edit:
  controller: App\Controller\MagazinePanelController::edit
  path: /m/{name}/panel/edytuj
  methods: [ GET, POST ]

magazine_panel_moderators:
  controller: App\Controller\MagazinePanelController::moderators
  path: /m/{name}/panel/moderatorzy
  methods: [ GET, POST ]

magazine_panel_moderator_purge:
  controller: App\Controller\MagazinePanelController::deleteModerator
  path: /m/{magazine_name}/panel/{moderator_id}/purge
  methods: [ POST ]

magazine_panel_bans:
  controller: App\Controller\MagazinePanelController::bans
  path: /m/{name}/panel/bany
  methods: [ GET, POST ]
